# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-05 19:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.CharField(help_text='app id, same as the folder name', max_length=128, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('user_docs', models.URLField(blank=True, max_length=256)),
                ('admin_docs', models.URLField(blank=True, max_length=256)),
                ('developer_docs', models.URLField(blank=True, max_length=256)),
                ('issue_tracker', models.URLField(blank=True, max_length=256)),
                ('website', models.URLField(blank=True, max_length=256)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=128)),
                ('php_min', models.CharField(max_length=32)),
                ('php_max', models.CharField(blank=True, max_length=32)),
                ('platform_min', models.CharField(max_length=32)),
                ('platform_max', models.CharField(blank=True, max_length=32)),
                ('download', models.URLField(blank=True, max_length=256)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.App')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('mail', models.EmailField(blank=True, max_length=256)),
                ('homepage', models.URLField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(help_text='Category id which is used to identify a category. Used to identify categories when uploading an app', max_length=128, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Category name which will be presented to the user', max_length=128)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'verbose_name': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of a required shell command, e.g. grep', max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.CharField(help_text='Key which is used to identify a database', max_length=128, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Database name which will be presented to the user', max_length=128)),
            ],
            options={
                'verbose_name_plural': 'Databases',
                'verbose_name': 'Database',
            },
        ),
        migrations.CreateModel(
            name='DatabaseDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_min', models.CharField(max_length=32)),
                ('version_max', models.CharField(blank=True, max_length=32)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.AppRelease')),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Database')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_min', models.CharField(max_length=32)),
                ('version_max', models.CharField(blank=True, max_length=32)),
                ('app_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.AppRelease')),
            ],
        ),
        migrations.CreateModel(
            name='PhpLibrary',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(max_length=256)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.App')),
            ],
        ),
        migrations.AddField(
            model_name='librarydependency',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PhpLibrary'),
        ),
        migrations.AddField(
            model_name='apprelease',
            name='databases',
            field=models.ManyToManyField(through='core.DatabaseDependency', to='core.Database'),
        ),
        migrations.AddField(
            model_name='apprelease',
            name='libs',
            field=models.ManyToManyField(through='core.LibraryDependency', to='core.PhpLibrary'),
        ),
        migrations.AddField(
            model_name='app',
            name='authors',
            field=models.ManyToManyField(to='core.Author'),
        ),
        migrations.AddField(
            model_name='app',
            name='categories',
            field=models.ManyToManyField(to='core.Category'),
        ),
    ]
